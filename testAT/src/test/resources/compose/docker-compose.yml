version: "3.3"

networks:
  test_net:
    driver: bridge
    ipam:
     config:
       - subnet: ${NET}.0/24

volumes:
  hdfs_vol:

services:
# External base services

# Datastores
  hdfs:
    env_file:
      - .env
    image: ${HDFS_IMAGE}
    volumes:
      - ./hdfs_vol:/hdfs_vol
    command: bash /hdfs_vol/entrypoint.sh
    hostname: hdfs
    expose:
      - 9000
    networks:
      test_net:
        ipv4_address: ${NET}.100

  postgres-data:
    env_file:
      - .env
    image: ${PG_DATASTORE_IMAGE}
    networks:
      test_net:
        ipv4_address: ${NET}.101
    entrypoint: bash /postgre_vol/entrypoint.sh
    volumes:
      - ./postgre_vol:/postgre_vol
    expose:
      - 5432
    ports:
      - 5433:5432


  kafka:
    env_file:
      - .env
    image: ${KAFKA_IMAGE}
    networks:
      test_net:
        ipv4_address: ${NET}.3
    environment:
      - ADVERTISED_HOST=${NET}.3

  spark-master:
    env_file:
      - .env
    image: ${SPARK_IMAGE}
    command: bin/spark-class org.apache.spark.deploy.master.Master -h spark-master
    hostname: spark-master
    networks:
      test_net:
        ipv4_address: ${NET}.4
    expose:
      - 7001
      - 7002
      - 7003
      - 7004
      - 7005
      - 7006
      - 7077
      - 6066
    ports:
      - 4040:4040
      - 6066:6066
      - 7077:7077
      - 8080:8080

  spark-worker:
    env_file:
      - .env
    image: ${SPARK_IMAGE}
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    hostname: spark-worker
    networks:
      test_net:
        ipv4_address: ${NET}.5
    links:
      - spark-master
    expose:
      - 7012
      - 7013
      - 7014
      - 7015
      - 7016
      - 8881
    ports:
      - 8081:8081

  postgres-datastore:
    env_file:
      - .env
    image: ${PG_DATASTORE_IMAGE}
    networks:
      test_net:
        ipv4_address: ${NET}.6
    expose:
      - 5432
    ports:
      - 5432:5432

  es-datastore:
    env_file:
      - .env
    image: ${ES_IMAGE}
    networks:
      test_net:
        ipv4_address: ${NET}.7
    expose:
      - 9200
      - 9300
    ports:
      - 9200:9200
      - 9300:9300

# Starter services
  dg-bootstrap:
    env_file:
      - .env
    image: ${BOOTSTRAP_IMAGE}
    entrypoint: bash -c "sleep 40 && bash /docker-entrypoint.sh"
    networks:
      test_net:
        ipv4_address: ${NET}.20
    links:
      - postgres-datastore
      - es-datastore


# Agents
  hdfs-agent:
    env_file:
      - .env
    image: ${HDFS_AGENT_IMAGE}
    links:
      - hdfs
      - kafka
      - metadata-job
    entrypoint: bash -c "sleep 20 && /docker-entrypoint.sh"
    networks:
      test_net:
        ipv4_address: ${NET}.200

  postgresql-agent:
    env_file:
      - .env
    image: ${POSTGRE_AGENT_IMAGE}
    links:
      - postgres-data
      - kafka
      - metadata-job
    entrypoint: bash -c "sleep 25 && /docker-entrypoint.sh"
    networks:
      test_net:
        ipv4_address: ${NET}.201


# JOB
  metadata-job:
    env_file:
      - .env
    image: ${JOB_IMAGE}
    hostname: metadata-job
    entrypoint: bash -c "sleep 25 && /entrypoint.sh"
    links:
      - spark-master
      - postgres-datastore
      - kafka
      - dg-bootstrap
    networks:
      test_net:
        ipv4_address: ${NET}.202
    environment:
      - WEBHOST=${NET}.202
# API-FRONT
  datadictionary-api:
    env_file:
      - .env
    image: ${DATADIC_API_IMAGE}
    hostname: datadictionary-api
    entrypoint: bash -c "sleep 35 && bash /docker-entrypoint.sh"
    links:
      - dg-bootstrap
    networks:
      test_net:
        ipv4_address: ${NET}.31
    environment:
      - API_PORT=10033
    expose:
      - 10033
    ports:
      - 10033:10033

  datadictionary-ui:
    env_file:
      - .env
    image: ${DATADIC_UI_IMAGE}
    hostname: datadictionary-ui
    entrypoint: bash -c "sleep 3 && bash /docker_entrypoint"
    links:
      - datadictionary-api
    networks:
      test_net:
        ipv4_address: ${NET}.32
    expose:
      - 80
    ports:
      - 8043:80


  quality-api:
    env_file:
      - .env
    image: ${QUALITY_API_IMAGE}
    hostname: quality-api
    links:
      - dg-bootstrap
    networks:
      test_net:
        ipv4_address: ${NET}.33
    environment:
      - API_PORT=10034
    expose:
      - 10034
    ports:
      - 10034:10034


